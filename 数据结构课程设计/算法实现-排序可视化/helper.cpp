#include "helper.h"
#include "ui_helper.h"

helper::helper(QWidget *parent) :
    QMainWindow(parent),
    ui(new Ui::helper)
{
    ui->setupUi(this);
    this->setWindowTitle(QString("使用说明"));
    this->setWindowIcon(QIcon(":/iconsrc/icon.ico"));
    this->setFixedSize(640,480);//固定大小
    ui->instruction->setReadOnly(true);

    // 设置样式表
    QFile styleFile(":/stylesrc/style.qss");
    QString styleSheet;
    if (styleFile.open(QIODevice::ReadOnly))
    {

        styleSheet = QLatin1String(styleFile.readAll());
        ui->centralwidget->setStyleSheet(styleSheet);
    }
    styleFile.close();

    // 帮助内容
    QString text;
    text += "/************************************** 程序简介 **************************************/\n\n";

    text += "本程序用于实现排序算法的可视化过程。\n";
    text += "程序支持的6种排序分别为：插入排序、折半插入排序、希尔排序、冒牌排序、快速排序、选择排序。\n\n";


    text += "/************************************** 界面组成 **************************************/\n\n";

    text += "本程序的界面主要有五个部分组成，分别为菜单栏、排序信息展示区（下简称“信息区”）、排序过程演示区（下简称“演示区”）、排序过程控制区（下简称“控制区”）和底部状态栏。\n\n";

    text += "/**************************************  菜单栏 **************************************/\n\n";

    text += "菜单栏可用查看Help内容，了解如何使用本程序。\n\n";


    text += "/**************************************  信息区 **************************************/\n\n";

    text += "信息区用来显示排序过程中的一些信息。\n";
    text += "数据量：本次排序的数据的规模。\n";
    text += "比较次数：排序到目前为止经过了多少次比较。\n";
    text += "操作次数：排序到目前为止经历了多少次操作。\n";
    text += "排序用时：排序到目前为止所用的时间。\n\n";



    text += "/**************************************  演示区 **************************************/\n\n";

    text += "用不同高度的柱子来表示数据之间的大小关系，更加直观。\n";
    text += "演示区在排序过程中一共会用到4种颜色：\n";
    text += "白色表示当前步骤中没有动作的元素。\n";
    text += "天蓝色表示当前步骤中被访问的元素，如比较、访问等操作。\n";
    text += "红色表示当前步骤中参与写入操作的元素，如交换、更新等操作。\n";
    text += "浅绿色用于指示当前步骤中的基准值，或用于区分不同元素以便更加直观的看到排序过程\n";

    text += "在排序结束后，柱状图会从左到右依次变绿，表示排序完成，数据已有序。\n\n";


    text += "/**************************************  控制区 **************************************/\n\n";

    text += "控制区用于对排序过程进行相关的控制，可以生成随机的数据，选择排序方式，开始排序，一步一步地进行排序，暂停排序，继续排序，以及实时更改排序的速度\n\n";

    text += "/**************************************  状态栏 **************************************/\n\n";

    text += "状态栏在光标选中某些按钮时会显示该按钮的介绍，同时在排序过程中状态栏还会对当前排序进行到的步骤进行显示,比如(当前正在比较哪两个元素)\n\n";

    ui->instruction->insertPlainText(text +='\n');
}

helper::~helper()
{
    delete ui;
}
